(()=>{"use strict";var e={d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{m:()=>d});const t={EXTEND_PADDLE:0,SPEED_UP_PADDLE:1,SLOW_DOWN_BALL:2,EXPLODE_BOTTOM_ROW:3,SPLIT_BALL:4,EXTRA_ATTEMPT:5,INCREASE_BALL_SIZE:6,EXPLOSIVE_BALL:7},s={SHRINK_PADDLE:0,SPEED_UP_BALL:1,DROP_BRICKS:2,DECREASE_BALL_SIZE:3},i={NORMAL:0,STRONG:1,BONUS:2,DEBUFF:3,DYNAMITE:4,METAL:5,INVINCIBLE:6,SAND:7};class a{constructor(e,t){this.canvas=e,this.width=t,this.height=10,this.x=(e.width-this.width)/2,this.y=e.height-50,this.speed=5}move(e){"right"===e&&this.x<this.canvas.width-this.width?this.x+=this.speed:"left"===e&&this.x>0&&(this.x-=this.speed)}draw(e){e.beginPath(),e.rect(this.x,this.y,this.width,this.height),e.fillStyle="#0095DD",e.fill(),e.closePath()}}class h{constructor(e,t){this.canvas=e,this.BALL_SIZES={SMALL:6,NORMAL:10,LARGE:15},this.radius=this.BALL_SIZES.NORMAL,this.speed=t,this.reset(),this.loadImages(),this.explosive=!1}loadImages(){this.normalBallImage=new Image,this.normalBallImage.src="assets/ball.png",this.explosiveBallImage=new Image,this.explosiveBallImage.src="assets/explosive_ball.png"}reset(){this.x=this.canvas.width/2,this.y=this.canvas.height-60,this.dx=0,this.dy=0}launch(){const e=(60*Math.random()-30)*Math.PI/180;this.dx=this.speed*Math.sin(e),this.dy=-this.speed*Math.cos(e)}move(){this.x+=this.dx,this.y+=this.dy}reverseX(){this.dx=-this.dx}reverseY(){this.dy=-this.dy}checkWallCollision(){let e=!1;return(this.x+this.dx>this.canvas.width-this.radius||this.x+this.dx<this.radius)&&(this.reverseX(),e=!0),this.y+this.dy<this.radius&&(this.reverseY(),e=!0),e}checkPaddleCollision(e){if(this.y+this.dy>e.y-this.radius&&this.y+this.dy<e.y+e.height&&this.x>e.x&&this.x<e.x+e.width){this.reverseY();const t=e.x+e.width/2,s=this.x-t;return this.dx=.06*s,!0}return!1}isLost(){return this.y+this.dy>this.canvas.height-this.radius}draw(e){const t=this.explosive?this.explosiveBallImage:this.normalBallImage,s=2*this.radius;e.drawImage(t,this.x-this.radius,this.y-this.radius,s,s)}setSize(e){this.radius=this.BALL_SIZES[e]}}class o{constructor(e,t,s,i,a){this.x=e,this.y=t,this.width=s,this.height=i,this.type=a,this.status=this.getInitialStatus(a),this.images=this.loadImages()}getInitialStatus(e){switch(e){case i.STRONG:return 2;case i.METAL:case i.INVINCIBLE:return 1/0;default:return 1}}loadImages(){const e={};return e[i.NORMAL]=this.loadImage("assets/normal_brick.png"),e[i.STRONG]=this.loadImage("assets/strong_brick.png"),e[i.BONUS]=this.loadImage("assets/bonus_brick.png"),e[i.DEBUFF]=this.loadImage("assets/debuff_brick.png"),e[i.DYNAMITE]=this.loadImage("assets/dynamite_brick.png"),e[i.METAL]=this.loadImage("assets/metal_brick.png"),e[i.INVINCIBLE]=this.loadImage("assets/invincible_brick.png"),e[i.SAND]=this.loadImage("assets/sand_brick.png"),e}loadImage(e){const t=new Image;return t.src=e,t}draw(e){if(this.status<=0)return;const t=this.images[this.type];t?e.drawImage(t,this.x,this.y,this.width,this.height):(e.beginPath(),e.rect(this.x,this.y,this.width,this.height),e.fillStyle="#0095DD",e.fill(),e.closePath())}hit(e){return this.type!==i.INVINCIBLE&&(this.type===i.METAL?!!e&&(this.status=0,!0):(this.status--,this.type===i.STRONG&&1===this.status&&(this.type=i.SAND),this.status<=0))}}class r{constructor(e,t,s){this.canvas=e,this.game=t,this.brickRowCount=s.rows,this.brickColumnCount=s.columns,this.brickWidth=85,this.brickHeight=20,this.brickPadding=10,this.brickOffsetTop=30,this.brickOffsetLeft=30,this.bricks=[],this.BRICK_CHANCES=s.brickTypes,this.initializeBricks()}initializeBricks(){for(let e=0;e<this.brickColumnCount;e++){this.bricks[e]=[];for(let t=0;t<this.brickRowCount;t++){const s=e*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,i=t*(this.brickHeight+this.brickPadding)+this.brickOffsetTop,a=this.getRandomBrickType();this.bricks[e][t]=new o(s,i,this.brickWidth,this.brickHeight,a)}}}getRandomBrickType(){const e=100*Math.random();let t=0;for(const[s,a]of Object.entries(this.BRICK_CHANCES))if(t+=a,e<=t)return i[s];return i.NORMAL}checkCollision(e){for(let t=0;t<this.brickColumnCount;t++)for(let s=0;s<this.brickRowCount;s++){const a=this.bricks[t][s];if(a.status>0){const h=this.getCollisionSide(e,a);if(h)return e.explosive||a.type===i.DYNAMITE?this.explodeDynamite(t,s):a.hit(e.explosive)&&d.setScore(d.getScore()+1),"left"===h||"right"===h?e.reverseX():e.reverseY(),{brick:a,column:t,row:s}}}return null}getCollisionSide(e,t){const s=e.x-e.radius,i=e.x+e.radius,a=e.y-e.radius,h=e.y+e.radius,o=t.x,r=t.x+t.width,n=t.y,l=t.y+t.height;if(i>o&&s<r&&h>n&&a<l){const e=i-o,t=r-s,d=h-n,c=l-a,u=Math.min(e,t,d,c);return u===e?"left":u===t?"right":u===d?"top":"bottom"}return null}draw(e){for(let t=0;t<this.brickColumnCount;t++)for(let s=0;s<this.brickRowCount;s++)this.bricks[t][s].draw(e)}allBricksDestroyed(){for(let e=0;e<this.brickColumnCount;e++)for(let t=0;t<this.brickRowCount;t++)if(this.bricks[e][t].status>0&&this.bricks[e][t].type!==i.INVINCIBLE)return!1;return!0}dropBricksOneRow(){if(this.bricks.some((e=>e[this.brickRowCount-1].status>0)))for(let e=0;e<this.brickColumnCount;e++)this.bricks[e].pop();for(let e=0;e<this.brickColumnCount;e++)for(let t=this.brickRowCount-1;t>0;t--)this.bricks[e][t]=this.bricks[e][t-1],this.bricks[e][t]&&(this.bricks[e][t].y+=this.brickHeight+this.brickPadding);for(let e=0;e<this.brickColumnCount;e++){const t=e*(this.brickWidth+this.brickPadding)+this.brickOffsetLeft,s=this.brickOffsetTop;this.bricks[e][0]=new o(t,s,this.brickWidth,this.brickHeight,i.NORMAL),this.bricks[e][0].status=0}}explodeBottomRow(){for(let e=0;e<this.brickColumnCount;e++){const t=this.bricks[e][this.brickRowCount-1];t.status>0&&(t.status=0,d.setScore(d.getScore()+1))}}explodeDynamite(e,t){const s=[{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:0},{dx:1,dy:0}],a=(e,t)=>{if(e<0||e>=this.brickColumnCount||t<0||t>=this.brickRowCount)return;const h=this.bricks[e][t];h&&h.status>0&&h.hit(!0)&&(d.setScore(d.getScore()+1),h.type===i.BONUS?this.game.bonusManager.spawnBonus(h):h.type===i.DEBUFF?this.game.bonusManager.spawnDebuff(h):h.type===i.DYNAMITE&&s.forEach((s=>{a(e+s.dx,t+s.dy)})))};a(e,t),s.forEach((s=>{a(e+s.dx,t+s.dy)}))}destroyAllBricks(){for(let e=0;e<this.brickColumnCount;e++)for(let t=0;t<this.brickRowCount;t++){const s=this.bricks[e][t];s.status>0&&s.type!==i.INVINCIBLE&&(s.status=0,d.setScore(d.getScore()+1))}}}class n{constructor(e){this.game=e,this.activeBonus=[],this.activeBonuses=new Set,this.BONUS_FALL_SPEED=.65,this.BALL_SLOW_DOWN_FACTOR=.7,this.BALL_SPEED_UP_FACTOR=1.4,this.bonusImage=new Image,this.bonusImage.src="assets/bonus_star.png",this.debuffImage=new Image,this.debuffImage.src="assets/debuff.png"}spawnBonus(e){const s=Math.floor(Math.random()*Object.keys(t).length);this.activeBonus.push({x:e.x+e.width/2,y:e.y+e.height,type:s,dy:Math.abs(this.game.balls[0].dy)*this.BONUS_FALL_SPEED,isDebuff:!1})}spawnDebuff(e){const t=Math.floor(Math.random()*Object.keys(s).length);this.activeBonus.push({x:e.x+e.width/2,y:e.y+e.height,type:t,dy:Math.abs(this.game.balls[0].dy)*this.BONUS_FALL_SPEED,isDebuff:!0})}update(){for(let e=this.activeBonus.length-1;e>=0;e--){const t=this.activeBonus[e];t.y+=t.dy,this.checkPaddleCollision(t)?(this.activateBonus(t),this.activeBonus.splice(e,1)):t.y>this.game.paddle.canvas.height&&this.activeBonus.splice(e,1)}}checkPaddleCollision(e){return e.y+8>this.game.paddle.y&&e.y+8<this.game.paddle.y+this.game.paddle.height&&e.x>this.game.paddle.x-10&&e.x<this.game.paddle.x+this.game.paddle.width+10}activateBonus(e){if(e.isDebuff)switch(this.game.soundManager.playSound("debuffPickedUp"),d.setScore(d.getScore()-3),e.type){case s.SHRINK_PADDLE:this.game.paddle.width=Math.max(50,.75*this.game.paddle.width);break;case s.SPEED_UP_BALL:this.game.balls.forEach((e=>e.speed*=this.BALL_SPEED_UP_FACTOR));break;case s.DROP_BRICKS:this.game.brickManager.dropBricksOneRow();break;case s.DECREASE_BALL_SIZE:this.game.balls.forEach((e=>{e.radius>e.BALL_SIZES.SMALL&&(e.radius=e.radius===e.BALL_SIZES.LARGE?e.BALL_SIZES.NORMAL:e.BALL_SIZES.SMALL)}))}else switch(this.game.soundManager.playSound("bonusPickedUp"),d.setScore(d.getScore()+3),e.type){case t.EXTEND_PADDLE:this.game.paddle.width*=1.25,this.activeBonuses.add(t.EXTEND_PADDLE);break;case t.SPEED_UP_PADDLE:this.game.paddle.speed+=2,this.activeBonuses.add(t.SPEED_UP_PADDLE);break;case t.SLOW_DOWN_BALL:this.game.balls.forEach((e=>e.speed*=this.BALL_SLOW_DOWN_FACTOR)),this.activeBonuses.add(t.SLOW_DOWN_BALL);break;case t.EXPLODE_BOTTOM_ROW:this.game.brickManager.explodeBottomRow();break;case t.SPLIT_BALL:this.game.splitBall();break;case t.EXTRA_ATTEMPT:d.getAttempts()<3?d.setAttempts(d.getAttempts()+1):d.setScore(d.getScore()+40);break;case t.INCREASE_BALL_SIZE:this.game.balls.forEach((e=>{e.radius<e.BALL_SIZES.LARGE&&(e.radius=e.radius===e.BALL_SIZES.SMALL?e.BALL_SIZES.NORMAL:e.BALL_SIZES.LARGE)})),this.activeBonuses.add(t.INCREASE_BALL_SIZE);break;case t.EXPLOSIVE_BALL:this.game.balls.forEach((e=>e.explosive=!0)),this.activeBonuses.add(t.EXPLOSIVE_BALL)}}resetBonuses(){this.activeBonuses.clear(),this.game.paddle.width=120,this.game.paddle.speed=5,this.game.balls.forEach((e=>{e.radius=e.BALL_SIZES.NORMAL,e.explosive=!1,e.speed=2.7}))}draw(e){this.activeBonus.forEach((t=>{const s=t.isDebuff?this.debuffImage:this.bonusImage;e.drawImage(s,t.x-10,t.y-10,20,20)}))}}class l{constructor(){this.sounds={welcomeScreen:new Audio("assets/sounds/Welcome_Screen.ogg"),stage1:new Audio("assets/sounds/Stage_1.ogg"),stage2:new Audio("assets/sounds/Stage_2.ogg"),stage3:new Audio("assets/sounds/Stage_3.wav"),stage4:new Audio("assets/sounds/Stage_4.wav"),stage5:new Audio("assets/sounds/Stage_5.ogg"),brickCollision:new Audio("assets/sounds/brick_collision.ogg"),paddleCollision:new Audio("assets/sounds/paddle_collision.ogg"),wallCollision:new Audio("assets/sounds/wall_collision.ogg"),brickDestroyed:new Audio("assets/sounds/Brick_destroyed.ogg"),bonusPickedUp:new Audio("assets/sounds/bonus_picked_up.ogg"),debuffPickedUp:new Audio("assets/sounds/debuff_picked_up.ogg")},this.currentBackgroundMusic=null,this.musicVolume=.5,this.effectsVolume=.5,this.isAudioUnlocked=!1,this.setupAudioUnlock(),this.applyVolume()}setupAudioUnlock(){const e=()=>{this.isAudioUnlocked||(this.isAudioUnlocked=!0,document.removeEventListener("keydown",e),console.log("Audio unlocked"),this.playBackgroundMusic())};document.addEventListener("keydown",(t=>{"Space"===t.code&&e()}))}applyVolume(){for(let e in this.sounds)e.startsWith("stage")||"welcomeScreen"===e?this.sounds[e].volume=this.musicVolume:this.sounds[e].volume=this.effectsVolume}setMusicVolume(e){this.musicVolume=Math.max(0,Math.min(1,e)),this.applyVolume(),this.currentBackgroundMusic&&(this.currentBackgroundMusic.volume=this.musicVolume)}setEffectsVolume(e){this.effectsVolume=Math.max(0,Math.min(1,e)),this.applyVolume()}playSound(e){this.sounds[e]&&(this.sounds[e].currentTime=0,this.sounds[e].play().catch((e=>console.error("Error playing sound:",e))))}playBackgroundMusic(e){if(!this.isAudioUnlocked)return void console.log("Waiting for audio unlock...");let t;if(this.currentBackgroundMusic&&(this.currentBackgroundMusic.pause(),this.currentBackgroundMusic.currentTime=0),"welcome"===e)t=this.sounds.welcomeScreen;else{const s=Math.min(Math.ceil(e/5),5);t=this.sounds[`stage${s}`]}t&&(t.loop=!0,t.volume=this.musicVolume,t.play().catch((e=>console.error("Error playing background music:",e))),this.currentBackgroundMusic=t)}stopBackgroundMusic(){this.currentBackgroundMusic&&(this.currentBackgroundMusic.pause(),this.currentBackgroundMusic.currentTime=0,this.currentBackgroundMusic=null)}}const d=function(){let e=null,t=null,s="welcome",i=0,a=1,h=3,o=[];return{initialize(s){e=document.getElementById(s),t=e.getContext("2d"),e.width=1100,e.height=700},reset(){s="ready",i=0,a=1,h=3},getCanvas:()=>e,getContext:()=>t,getGameState:()=>s,setGameState(e){s=e},getScore:()=>i,setScore(e){i=e},getLevel:()=>a,setLevel(e){a=e},getMaxLevel:()=>25,getAttempts:()=>h,setAttempts(e){h=e},getLevels:()=>o,setLevels(e){o=e}}}();class c{constructor(e){d.initialize(e),this.rightPressed=!1,this.leftPressed=!1,this.setupEventListeners(),this.soundManager=new l,this.soundManager.setMusicVolume(.11),this.soundManager.setEffectsVolume(.65)}async loadLevels(){try{const e=await fetch("levels.json");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();d.setLevels(t)}catch(e){throw console.error("Error loading levels:",e),e}}async setupGame(){await this.loadLevels(),this.resetGameForNewLevel(),d.setGameState("welcome"),this.soundManager.playBackgroundMusic("welcome")}resetGameForNewLevel(){const e=d.getLevels()[d.getLevel()-1];this.paddle=new a(d.getCanvas(),e.paddleWidth),this.balls=[new h(d.getCanvas(),0)],this.brickManager=new r(d.getCanvas(),this,e),this.bonusManager=new n(this),this.backgroundImage=new Image,this.backgroundImage.src=e.background,this.levelBallSpeed=e.ballSpeed,this.resetBallPosition()}resetBallPosition(){this.balls[0].x=this.paddle.x+this.paddle.width/2,this.balls[0].y=this.paddle.y-this.balls[0].radius}setupEventListeners(){document.addEventListener("keydown",this.keyDownHandler.bind(this)),document.addEventListener("keyup",this.keyUpHandler.bind(this))}keyDownHandler(e){"Right"===e.key||"ArrowRight"===e.key?this.rightPressed=!0:"Left"===e.key||"ArrowLeft"===e.key?this.leftPressed=!0:" "===e.key?"welcome"===d.getGameState()?this.startNewGame():"ready"===d.getGameState()?this.launchBall():["gameOver","gameWon"].includes(d.getGameState())&&d.setGameState("welcome"):e.ctrlKey&&"]"===e.key&&this.debugCompleteLevel()}keyUpHandler(e){"Right"===e.key||"ArrowRight"===e.key?this.rightPressed=!1:"Left"!==e.key&&"ArrowLeft"!==e.key||(this.leftPressed=!1)}startNewGame(){d.reset(),this.resetGameForNewLevel(),d.setGameState("ready"),this.soundManager.playBackgroundMusic(d.getLevel())}launchBall(){"ready"===d.getGameState()&&(d.setGameState("playing"),this.balls.forEach((e=>{e.speed=this.levelBallSpeed,e.launch()})))}nextLevel(){d.setLevel(d.getLevel()+1),d.getLevel()>d.getMaxLevel()?(d.setGameState("gameWon"),this.soundManager.stopBackgroundMusic()):(this.resetGameForNewLevel(),d.setGameState("ready"),this.soundManager.playBackgroundMusic(d.getLevel()))}update(){switch(this.rightPressed&&this.paddle.move("right"),this.leftPressed&&this.paddle.move("left"),d.getGameState()){case"playing":this.updatePlayingState();break;case"ready":this.resetBallPosition()}}updatePlayingState(){this.balls.forEach(((e,t)=>{e.move(),e.checkWallCollision()&&this.soundManager.playSound("wallCollision"),e.checkPaddleCollision(this.paddle)&&this.soundManager.playSound("paddleCollision");const s=this.brickManager.checkCollision(e);if(s){this.soundManager.playSound("brickCollision");const{brick:t,column:a,row:h}=s;t.type===i.BONUS?this.bonusManager.spawnBonus(t):t.type===i.DEBUFF?this.bonusManager.spawnDebuff(t):t.type===i.DYNAMITE&&this.brickManager.explodeDynamite(a,h),e.explosive&&this.explodeAdjacentBricks(a,h),t.status<=0&&this.soundManager.playSound("brickDestroyed")}e.isLost()&&this.balls.splice(t,1)})),this.bonusManager.update(),0===this.balls.length&&this.handleBallLoss(),this.brickManager.allBricksDestroyed()&&this.nextLevel()}explodeAdjacentBricks(e,t){[{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:0},{dx:1,dy:0}].forEach((s=>{const i=e+s.dx,a=t+s.dy;if(i>=0&&i<this.brickManager.brickColumnCount&&a>=0&&a<this.brickManager.brickRowCount){const e=this.brickManager.bricks[i][a];e&&e.status>0&&e.hit(!0)&&d.setScore(d.getScore()+1)}}))}draw(){const e=d.getContext(),t=d.getCanvas();switch(e.clearRect(0,0,t.width,t.height),e.drawImage(this.backgroundImage,0,0,t.width,t.height),d.getGameState()){case"welcome":this.drawWelcomeScreen();break;case"ready":case"playing":this.brickManager.draw(e),this.balls.forEach((t=>t.draw(e))),this.paddle.draw(e),this.bonusManager.draw(e),this.drawLevelInfo(e);break;case"gameOver":this.drawGameOverScreen();break;case"gameWon":this.drawGameWonScreen()}}drawWelcomeScreen(){const e=d.getContext(),t=d.getCanvas();e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,t.width,t.height),e.font="40px Arial",e.fillStyle="#FFFFFF",e.textAlign="center",e.fillText("Это Brick Breaker",t.width/2,t.height/2-50),e.font="20px Arial",e.fillText("Нажмите ПРОБЕЛ для начала",t.width/2,t.height/2+50)}drawGameOverScreen(){const e=d.getContext(),t=d.getCanvas();e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,t.width,t.height),e.font="40px Arial",e.fillStyle="#FFFFFF",e.textAlign="center",e.fillText("Игра окончена",t.width/2,t.height/2-50),e.font="30px Arial",e.fillText(`Итоговый счет: ${d.getScore()}`,t.width/2,t.height/2+20),e.font="20px Arial",e.fillText("Нажмите ПРОБЕЛ для перезапуска",t.width/2,t.height/2+80)}drawGameWonScreen(){const e=d.getContext(),t=d.getCanvas();e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,t.width,t.height),e.font="40px Arial",e.fillStyle="#FFFFFF",e.textAlign="center",e.fillText("Поздравляем! Вы прошли игру!",t.width/2,t.height/2-50),e.font="30px Arial",e.fillText(`Итоговый счет: ${d.getScore()}`,t.width/2,t.height/2+20),e.font="20px Arial",e.fillText("Нажмите ПРОБЕЛ для перезапуска",t.width/2,t.height/2+80)}drawLevelInfo(e){e.font="20px Arial",e.fillStyle="#FFFFFF",e.textAlign="left",e.fillText(`Уровень: ${d.getLevel()}`,30,25),e.fillText(`Счет: ${d.getScore()}`,230,25),e.fillText("Попытки:",d.getCanvas().width-200,25);for(let t=0;t<d.getAttempts();t++)e.drawImage(this.balls[0].normalBallImage,d.getCanvas().width-110+30*t,10,20,20)}handleBallLoss(){d.getAttempts()>1?(d.setAttempts(d.getAttempts()-1),this.resetBallAndPaddle(),d.setGameState("ready")):d.setGameState("gameOver")}resetBallAndPaddle(){const e=d.getLevels()[d.getLevel()-1];this.paddle=new a(d.getCanvas(),e.paddleWidth),this.balls=[new h(d.getCanvas(),0)],this.resetBallPosition(),this.bonusManager.resetBonuses()}splitBall(){const e=this.balls.flatMap((e=>{const t=new h(d.getCanvas());return t.x=e.x,t.y=e.y,t.dx=-e.dx,t.dy=e.dy,t.speed=e.speed,t.radius=e.radius,t.explosive=e.explosive,[e,t]}));this.balls=e}gameLoop(){this.update(),this.draw(),requestAnimationFrame(this.gameLoop.bind(this))}start(){this.setupGame().then((()=>{this.gameLoop()}))}debugCompleteLevel(){"playing"===d.getGameState()&&(this.brickManager.destroyAllBricks(),d.setLevel(d.getLevel()+1),d.getLevel()>d.getMaxLevel()?d.setGameState("gameWon"):(this.resetGameForNewLevel(),d.setGameState("ready")))}}document.addEventListener("DOMContentLoaded",(async function(){try{new c("gameCanvas").start()}catch(e){console.error("Failed to initialize game:",e)}}))})();